// Generated by Dagger (https://google.github.io/dagger).
package com.vs.shcherbakov.savy.ui.webview;

import com.vs.shcherbakov.savy.data.PrefStorage;
import com.vs.shcherbakov.savy.ui.webview.interactor.WebInteractor;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class WebModule_ProvideWebViewInteractor$app_debugFactory
    implements Factory<WebInteractor> {
  private final WebModule module;

  private final Provider<PrefStorage> prefStorageProvider;

  public WebModule_ProvideWebViewInteractor$app_debugFactory(
      WebModule module, Provider<PrefStorage> prefStorageProvider) {
    this.module = module;
    this.prefStorageProvider = prefStorageProvider;
  }

  @Override
  public WebInteractor get() {
    return Preconditions.checkNotNull(
        module.provideWebViewInteractor$app_debug(prefStorageProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static WebModule_ProvideWebViewInteractor$app_debugFactory create(
      WebModule module, Provider<PrefStorage> prefStorageProvider) {
    return new WebModule_ProvideWebViewInteractor$app_debugFactory(module, prefStorageProvider);
  }

  public static WebInteractor proxyProvideWebViewInteractor$app_debug(
      WebModule instance, PrefStorage prefStorage) {
    return Preconditions.checkNotNull(
        instance.provideWebViewInteractor$app_debug(prefStorage),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
