// Generated by Dagger (https://google.github.io/dagger).
package com.vs.shcherbakov.savy.di;

import com.vs.shcherbakov.savy.data.PrefStorage;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class AppModule_ProvidePrefStorage$app_debugFactory implements Factory<PrefStorage> {
  private final AppModule module;

  public AppModule_ProvidePrefStorage$app_debugFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public PrefStorage get() {
    return Preconditions.checkNotNull(
        module.providePrefStorage$app_debug(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static AppModule_ProvidePrefStorage$app_debugFactory create(AppModule module) {
    return new AppModule_ProvidePrefStorage$app_debugFactory(module);
  }

  public static PrefStorage proxyProvidePrefStorage$app_debug(AppModule instance) {
    return Preconditions.checkNotNull(
        instance.providePrefStorage$app_debug(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
