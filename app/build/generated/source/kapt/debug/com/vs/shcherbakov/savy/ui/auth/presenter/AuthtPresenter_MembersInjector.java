// Generated by Dagger (https://google.github.io/dagger).
package com.vs.shcherbakov.savy.ui.auth.presenter;

import com.vs.shcherbakov.savy.ui.auth.interactor.AuthInteractor;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class AuthtPresenter_MembersInjector implements MembersInjector<AuthtPresenter> {
  private final Provider<AuthInteractor> interactorProvider;

  public AuthtPresenter_MembersInjector(Provider<AuthInteractor> interactorProvider) {
    this.interactorProvider = interactorProvider;
  }

  public static MembersInjector<AuthtPresenter> create(
      Provider<AuthInteractor> interactorProvider) {
    return new AuthtPresenter_MembersInjector(interactorProvider);
  }

  @Override
  public void injectMembers(AuthtPresenter instance) {
    injectInteractor(instance, interactorProvider.get());
  }

  public static void injectInteractor(AuthtPresenter instance, AuthInteractor interactor) {
    instance.interactor = interactor;
  }
}
