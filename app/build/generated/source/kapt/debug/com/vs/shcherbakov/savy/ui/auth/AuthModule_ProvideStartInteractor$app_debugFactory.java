// Generated by Dagger (https://google.github.io/dagger).
package com.vs.shcherbakov.savy.ui.auth;

import com.vs.shcherbakov.savy.data.PrefStorage;
import com.vs.shcherbakov.savy.ui.auth.interactor.AuthInteractor;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AuthModule_ProvideStartInteractor$app_debugFactory
    implements Factory<AuthInteractor> {
  private final AuthModule module;

  private final Provider<PrefStorage> prefStorageProvider;

  public AuthModule_ProvideStartInteractor$app_debugFactory(
      AuthModule module, Provider<PrefStorage> prefStorageProvider) {
    this.module = module;
    this.prefStorageProvider = prefStorageProvider;
  }

  @Override
  public AuthInteractor get() {
    return Preconditions.checkNotNull(
        module.provideStartInteractor$app_debug(prefStorageProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static AuthModule_ProvideStartInteractor$app_debugFactory create(
      AuthModule module, Provider<PrefStorage> prefStorageProvider) {
    return new AuthModule_ProvideStartInteractor$app_debugFactory(module, prefStorageProvider);
  }

  public static AuthInteractor proxyProvideStartInteractor$app_debug(
      AuthModule instance, PrefStorage prefStorage) {
    return Preconditions.checkNotNull(
        instance.provideStartInteractor$app_debug(prefStorage),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
